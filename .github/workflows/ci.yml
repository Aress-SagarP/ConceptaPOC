name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
    
    # Run first TestNG suite
    - name: Run Test Suite 1
      run: mvn clean test "-Dsurefire.suiteXmlFiles=testngFullSuite.xml"

   
    - name: Upload Latest TestNG Report
      if: always()
      run: |
        $report = Get-ChildItem -Path reports/ -Filter *.html | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        if ($null -eq $report) {
          Write-Error "No HTML report found in reports/ folder."
          exit 1
        }
        echo "Latest report: $($report.Name)"
        mkdir latest-report
        Copy-Item $report.FullName -Destination latest-report/
      shell: pwsh

    - name: Upload latest report artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: latest-testng-report
        path: latest-report/

    - name: Download artifact
      if: always()
      uses: actions/download-artifact@v4
      with:
        name: latest-testng-report
        path: downloaded-report

    - name: Send Email with TestNG Report
      if: always()
      shell: pwsh
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_SUBJECT: 'TestNG Report'
        SMTP_SERVER: 'smtp.gmail.com'
        SMTP_PORT: '587'
        SMTP_USER: ${{ secrets.EMAIL_USERNAME }}
        SMTP_PASS: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        $report = Get-ChildItem -Path downloaded-report/ -Filter *.html | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        if ($null -eq $report) {
          Write-Error "No Extend report found in downloaded-report/ folder."
          exit 1
        }

        Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
        Install-Module -Name MailKit -Force -Scope CurrentUser

        $smtpClient = New-Object MailKit.Net.Smtp.SmtpClient
        $mimeMessage = New-Object MimeKit.MimeMessage
        $mimeMessage.From.Add($env:EMAIL_FROM)
        $mimeMessage.To.Add($env:EMAIL_TO)
        $mimeMessage.Subject = $env:EMAIL_SUBJECT

        $builder = New-Object MimeKit.BodyBuilder
        $builder.HtmlBody = "Please find attached the latest TestNG report."
        $builder.Attachments.Add($report.FullName) | Out-Null
        $mimeMessage.Body = $builder.ToMessageBody()

        $smtpClient.Connect($env:SMTP_SERVER, [int]$env:SMTP_PORT, [MailKit.Security.SecureSocketOptions]::StartTls)
        $smtpClient.Authenticate($env:SMTP_USER, $env:SMTP_PASS)
        $smtpClient.Send($mimeMessage)
        $smtpClient.Disconnect($true)
